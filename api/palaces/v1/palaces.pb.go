// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: api/palaces/v1/palaces.proto

package v1

import (
	global "blog/api/global"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListTodoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*SaveTodoItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListTodoReply) Reset() {
	*x = ListTodoReply{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTodoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTodoReply) ProtoMessage() {}

func (x *ListTodoReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTodoReply.ProtoReflect.Descriptor instead.
func (*ListTodoReply) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{0}
}

func (x *ListTodoReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTodoReply) GetList() []*SaveTodoItem {
	if x != nil {
		return x.List
	}
	return nil
}

type ListTodoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *global.PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Theme  string           `protobuf:"bytes,2,opt,name=theme,proto3" json:"theme,omitempty"`
	Type   int64            `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Status *int64           `protobuf:"varint,4,opt,name=status,proto3,oneof" json:"status,omitempty"`
	From   int64            `protobuf:"varint,5,opt,name=from,proto3" json:"from,omitempty"` //开始日期
}

func (x *ListTodoRequest) Reset() {
	*x = ListTodoRequest{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTodoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTodoRequest) ProtoMessage() {}

func (x *ListTodoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTodoRequest.ProtoReflect.Descriptor instead.
func (*ListTodoRequest) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{1}
}

func (x *ListTodoRequest) GetPage() *global.PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListTodoRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *ListTodoRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ListTodoRequest) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ListTodoRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

type SaveTodoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //ID
	Theme     string `protobuf:"bytes,2,opt,name=theme,proto3" json:"theme,omitempty"`           //主题
	Type      int64  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`            //类型  1:按次,2：固定日期,2无固定日期
	From      int64  `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"`            //开始日期
	To        int64  `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`                //截止日期
	Num       int64  `protobuf:"varint,6,opt,name=num,proto3" json:"num,omitempty"`              //次数
	Sort      int64  `protobuf:"varint,7,opt,name=sort,proto3" json:"sort,omitempty"`            //排序
	Content   string `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`       //内容
	Status    int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`        //状态
	CreatedAt int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	UpdatedAt int64  `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //更新时间
	DoneId    *int64 `protobuf:"varint,12,opt,name=doneId,proto3,oneof" json:"doneId,omitempty"` //完成记录的ID
}

func (x *SaveTodoItem) Reset() {
	*x = SaveTodoItem{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveTodoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTodoItem) ProtoMessage() {}

func (x *SaveTodoItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTodoItem.ProtoReflect.Descriptor instead.
func (*SaveTodoItem) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{2}
}

func (x *SaveTodoItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveTodoItem) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *SaveTodoItem) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SaveTodoItem) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SaveTodoItem) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *SaveTodoItem) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SaveTodoItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SaveTodoItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SaveTodoItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SaveTodoItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SaveTodoItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SaveTodoItem) GetDoneId() int64 {
	if x != nil && x.DoneId != nil {
		return *x.DoneId
	}
	return 0
}

type ListMemoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *global.PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Name   string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status *int64           `protobuf:"varint,3,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *ListMemoRequest) Reset() {
	*x = ListMemoRequest{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMemoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemoRequest) ProtoMessage() {}

func (x *ListMemoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemoRequest.ProtoReflect.Descriptor instead.
func (*ListMemoRequest) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{3}
}

func (x *ListMemoRequest) GetPage() *global.PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListMemoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListMemoRequest) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type ListMemoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*SaveMemoRequest `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListMemoReply) Reset() {
	*x = ListMemoReply{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMemoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemoReply) ProtoMessage() {}

func (x *ListMemoReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemoReply.ProtoReflect.Descriptor instead.
func (*ListMemoReply) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{4}
}

func (x *ListMemoReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMemoReply) GetList() []*SaveMemoRequest {
	if x != nil {
		return x.List
	}
	return nil
}

type SaveMemoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Status    int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *SaveMemoRequest) Reset() {
	*x = SaveMemoRequest{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveMemoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMemoRequest) ProtoMessage() {}

func (x *SaveMemoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMemoRequest.ProtoReflect.Descriptor instead.
func (*SaveMemoRequest) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{5}
}

func (x *SaveMemoRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveMemoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveMemoRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SaveMemoRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SaveMemoRequest) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SaveMemoRequest) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreatePalacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePalacesRequest) Reset() {
	*x = CreatePalacesRequest{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePalacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePalacesRequest) ProtoMessage() {}

func (x *CreatePalacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePalacesRequest.ProtoReflect.Descriptor instead.
func (*CreatePalacesRequest) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{6}
}

type CreatePalacesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePalacesReply) Reset() {
	*x = CreatePalacesReply{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePalacesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePalacesReply) ProtoMessage() {}

func (x *CreatePalacesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePalacesReply.ProtoReflect.Descriptor instead.
func (*CreatePalacesReply) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{7}
}

type UpdatePalacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePalacesRequest) Reset() {
	*x = UpdatePalacesRequest{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePalacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePalacesRequest) ProtoMessage() {}

func (x *UpdatePalacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePalacesRequest.ProtoReflect.Descriptor instead.
func (*UpdatePalacesRequest) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{8}
}

type UpdatePalacesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePalacesReply) Reset() {
	*x = UpdatePalacesReply{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePalacesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePalacesReply) ProtoMessage() {}

func (x *UpdatePalacesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePalacesReply.ProtoReflect.Descriptor instead.
func (*UpdatePalacesReply) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{9}
}

type DeletePalacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePalacesRequest) Reset() {
	*x = DeletePalacesRequest{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePalacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePalacesRequest) ProtoMessage() {}

func (x *DeletePalacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePalacesRequest.ProtoReflect.Descriptor instead.
func (*DeletePalacesRequest) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{10}
}

type DeletePalacesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePalacesReply) Reset() {
	*x = DeletePalacesReply{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePalacesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePalacesReply) ProtoMessage() {}

func (x *DeletePalacesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePalacesReply.ProtoReflect.Descriptor instead.
func (*DeletePalacesReply) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{11}
}

type GetPalacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPalacesRequest) Reset() {
	*x = GetPalacesRequest{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPalacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPalacesRequest) ProtoMessage() {}

func (x *GetPalacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPalacesRequest.ProtoReflect.Descriptor instead.
func (*GetPalacesRequest) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{12}
}

type GetPalacesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPalacesReply) Reset() {
	*x = GetPalacesReply{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPalacesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPalacesReply) ProtoMessage() {}

func (x *GetPalacesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPalacesReply.ProtoReflect.Descriptor instead.
func (*GetPalacesReply) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{13}
}

type ListPalacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPalacesRequest) Reset() {
	*x = ListPalacesRequest{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPalacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPalacesRequest) ProtoMessage() {}

func (x *ListPalacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPalacesRequest.ProtoReflect.Descriptor instead.
func (*ListPalacesRequest) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{14}
}

type ListPalacesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPalacesReply) Reset() {
	*x = ListPalacesReply{}
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPalacesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPalacesReply) ProtoMessage() {}

func (x *ListPalacesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_palaces_v1_palaces_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPalacesReply.ProtoReflect.Descriptor instead.
func (*ListPalacesReply) Descriptor() ([]byte, []int) {
	return file_api_palaces_v1_palaces_proto_rawDescGZIP(), []int{15}
}

var File_api_palaces_v1_palaces_proto protoreflect.FileDescriptor

var file_api_palaces_v1_palaces_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x15,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x6f, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa8, 0x02, 0x0a, 0x0c, 0x53,
	0x61, 0x76, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a,
	0x06, 0x64, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64,
	0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5a,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x53,
	0x61, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xd5, 0x08, 0x0a,
	0x07, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x59, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x59,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x50, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x53, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3e, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x30, 0x0a, 0x08, 0x44, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x11, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a,
	0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44,
	0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x12,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x3b, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x12, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x54, 0x6f, 0x64, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x08,
	0x44, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x11,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x35, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x64, 0x6f, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x6f, 0x64, 0x6f, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x64, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x64, 0x6f,
	0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x64, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x64, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x2a, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x6c, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x16, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_palaces_v1_palaces_proto_rawDescOnce sync.Once
	file_api_palaces_v1_palaces_proto_rawDescData = file_api_palaces_v1_palaces_proto_rawDesc
)

func file_api_palaces_v1_palaces_proto_rawDescGZIP() []byte {
	file_api_palaces_v1_palaces_proto_rawDescOnce.Do(func() {
		file_api_palaces_v1_palaces_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_palaces_v1_palaces_proto_rawDescData)
	})
	return file_api_palaces_v1_palaces_proto_rawDescData
}

var file_api_palaces_v1_palaces_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_palaces_v1_palaces_proto_goTypes = []any{
	(*ListTodoReply)(nil),        // 0: api.palaces.v1.ListTodoReply
	(*ListTodoRequest)(nil),      // 1: api.palaces.v1.ListTodoRequest
	(*SaveTodoItem)(nil),         // 2: api.palaces.v1.SaveTodoItem
	(*ListMemoRequest)(nil),      // 3: api.palaces.v1.ListMemoRequest
	(*ListMemoReply)(nil),        // 4: api.palaces.v1.ListMemoReply
	(*SaveMemoRequest)(nil),      // 5: api.palaces.v1.SaveMemoRequest
	(*CreatePalacesRequest)(nil), // 6: api.palaces.v1.CreatePalacesRequest
	(*CreatePalacesReply)(nil),   // 7: api.palaces.v1.CreatePalacesReply
	(*UpdatePalacesRequest)(nil), // 8: api.palaces.v1.UpdatePalacesRequest
	(*UpdatePalacesReply)(nil),   // 9: api.palaces.v1.UpdatePalacesReply
	(*DeletePalacesRequest)(nil), // 10: api.palaces.v1.DeletePalacesRequest
	(*DeletePalacesReply)(nil),   // 11: api.palaces.v1.DeletePalacesReply
	(*GetPalacesRequest)(nil),    // 12: api.palaces.v1.GetPalacesRequest
	(*GetPalacesReply)(nil),      // 13: api.palaces.v1.GetPalacesReply
	(*ListPalacesRequest)(nil),   // 14: api.palaces.v1.ListPalacesRequest
	(*ListPalacesReply)(nil),     // 15: api.palaces.v1.ListPalacesReply
	(*global.PageInfo)(nil),      // 16: api.global.PageInfo
	(*global.State)(nil),         // 17: api.global.State
	(*global.ID)(nil),            // 18: api.global.ID
	(*global.Empty)(nil),         // 19: api.global.Empty
}
var file_api_palaces_v1_palaces_proto_depIdxs = []int32{
	2,  // 0: api.palaces.v1.ListTodoReply.list:type_name -> api.palaces.v1.SaveTodoItem
	16, // 1: api.palaces.v1.ListTodoRequest.page:type_name -> api.global.PageInfo
	16, // 2: api.palaces.v1.ListMemoRequest.page:type_name -> api.global.PageInfo
	5,  // 3: api.palaces.v1.ListMemoReply.list:type_name -> api.palaces.v1.SaveMemoRequest
	6,  // 4: api.palaces.v1.Palaces.CreatePalaces:input_type -> api.palaces.v1.CreatePalacesRequest
	8,  // 5: api.palaces.v1.Palaces.UpdatePalaces:input_type -> api.palaces.v1.UpdatePalacesRequest
	10, // 6: api.palaces.v1.Palaces.DeletePalaces:input_type -> api.palaces.v1.DeletePalacesRequest
	12, // 7: api.palaces.v1.Palaces.GetPalaces:input_type -> api.palaces.v1.GetPalacesRequest
	14, // 8: api.palaces.v1.Palaces.ListPalaces:input_type -> api.palaces.v1.ListPalacesRequest
	5,  // 9: api.palaces.v1.Palaces.SaveMemo:input_type -> api.palaces.v1.SaveMemoRequest
	17, // 10: api.palaces.v1.Palaces.DoneMemo:input_type -> api.global.State
	18, // 11: api.palaces.v1.Palaces.DeleteMemo:input_type -> api.global.ID
	3,  // 12: api.palaces.v1.Palaces.ListMemo:input_type -> api.palaces.v1.ListMemoRequest
	2,  // 13: api.palaces.v1.Palaces.SaveTodo:input_type -> api.palaces.v1.SaveTodoItem
	18, // 14: api.palaces.v1.Palaces.DoneTodo:input_type -> api.global.ID
	18, // 15: api.palaces.v1.Palaces.DeleteTodo:input_type -> api.global.ID
	18, // 16: api.palaces.v1.Palaces.DeleteTodoDone:input_type -> api.global.ID
	18, // 17: api.palaces.v1.Palaces.DeleteTodoRecord:input_type -> api.global.ID
	1,  // 18: api.palaces.v1.Palaces.ListTodo:input_type -> api.palaces.v1.ListTodoRequest
	1,  // 19: api.palaces.v1.Palaces.ListTodoDone:input_type -> api.palaces.v1.ListTodoRequest
	7,  // 20: api.palaces.v1.Palaces.CreatePalaces:output_type -> api.palaces.v1.CreatePalacesReply
	9,  // 21: api.palaces.v1.Palaces.UpdatePalaces:output_type -> api.palaces.v1.UpdatePalacesReply
	11, // 22: api.palaces.v1.Palaces.DeletePalaces:output_type -> api.palaces.v1.DeletePalacesReply
	13, // 23: api.palaces.v1.Palaces.GetPalaces:output_type -> api.palaces.v1.GetPalacesReply
	15, // 24: api.palaces.v1.Palaces.ListPalaces:output_type -> api.palaces.v1.ListPalacesReply
	19, // 25: api.palaces.v1.Palaces.SaveMemo:output_type -> api.global.Empty
	19, // 26: api.palaces.v1.Palaces.DoneMemo:output_type -> api.global.Empty
	19, // 27: api.palaces.v1.Palaces.DeleteMemo:output_type -> api.global.Empty
	4,  // 28: api.palaces.v1.Palaces.ListMemo:output_type -> api.palaces.v1.ListMemoReply
	19, // 29: api.palaces.v1.Palaces.SaveTodo:output_type -> api.global.Empty
	19, // 30: api.palaces.v1.Palaces.DoneTodo:output_type -> api.global.Empty
	19, // 31: api.palaces.v1.Palaces.DeleteTodo:output_type -> api.global.Empty
	19, // 32: api.palaces.v1.Palaces.DeleteTodoDone:output_type -> api.global.Empty
	19, // 33: api.palaces.v1.Palaces.DeleteTodoRecord:output_type -> api.global.Empty
	0,  // 34: api.palaces.v1.Palaces.ListTodo:output_type -> api.palaces.v1.ListTodoReply
	0,  // 35: api.palaces.v1.Palaces.ListTodoDone:output_type -> api.palaces.v1.ListTodoReply
	20, // [20:36] is the sub-list for method output_type
	4,  // [4:20] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_palaces_v1_palaces_proto_init() }
func file_api_palaces_v1_palaces_proto_init() {
	if File_api_palaces_v1_palaces_proto != nil {
		return
	}
	file_api_palaces_v1_palaces_proto_msgTypes[1].OneofWrappers = []any{}
	file_api_palaces_v1_palaces_proto_msgTypes[2].OneofWrappers = []any{}
	file_api_palaces_v1_palaces_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_palaces_v1_palaces_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_palaces_v1_palaces_proto_goTypes,
		DependencyIndexes: file_api_palaces_v1_palaces_proto_depIdxs,
		MessageInfos:      file_api_palaces_v1_palaces_proto_msgTypes,
	}.Build()
	File_api_palaces_v1_palaces_proto = out.File
	file_api_palaces_v1_palaces_proto_rawDesc = nil
	file_api_palaces_v1_palaces_proto_goTypes = nil
	file_api_palaces_v1_palaces_proto_depIdxs = nil
}
