// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.4
// source: api/user/v1/user.proto

package v1

import (
	global "blog/api/global"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SaveExperienceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                            //ID
	Company          string   `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`                   //公司名称
	Role             string   `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`                         //职位名称
	Location         string   `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`                 //公司地址
	Start            int64    `protobuf:"varint,5,opt,name=start,proto3" json:"start,omitempty"`                      //开始时间
	End              int64    `protobuf:"varint,6,opt,name=end,proto3" json:"end,omitempty"`                          //结束时间
	Description      string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`           // 职位描述
	Responsibilities string   `protobuf:"bytes,8,opt,name=responsibilities,proto3" json:"responsibilities,omitempty"` //主要职责
	Achievements     string   `protobuf:"bytes,9,opt,name=achievements,proto3" json:"achievements,omitempty"`         //工作成就
	Skills           []string `protobuf:"bytes,10,rep,name=skills,proto3" json:"skills,omitempty"`                    //使用技能
}

func (x *SaveExperienceRequest) Reset() {
	*x = SaveExperienceRequest{}
	mi := &file_api_user_v1_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveExperienceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveExperienceRequest) ProtoMessage() {}

func (x *SaveExperienceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveExperienceRequest.ProtoReflect.Descriptor instead.
func (*SaveExperienceRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *SaveExperienceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveExperienceRequest) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *SaveExperienceRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SaveExperienceRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *SaveExperienceRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SaveExperienceRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *SaveExperienceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SaveExperienceRequest) GetResponsibilities() string {
	if x != nil {
		return x.Responsibilities
	}
	return ""
}

func (x *SaveExperienceRequest) GetAchievements() string {
	if x != nil {
		return x.Achievements
	}
	return ""
}

func (x *SaveExperienceRequest) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

type GetExperienceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                            //ID
	Company          string   `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`                   //公司名称
	Role             string   `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`                         //职位名称
	Location         string   `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`                 //公司地址
	Start            int64    `protobuf:"varint,5,opt,name=start,proto3" json:"start,omitempty"`                      //开始时间
	End              int64    `protobuf:"varint,6,opt,name=end,proto3" json:"end,omitempty"`                          //结束时间
	Description      string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`           // 职位描述
	Responsibilities string   `protobuf:"bytes,8,opt,name=responsibilities,proto3" json:"responsibilities,omitempty"` //主要职责
	Achievements     string   `protobuf:"bytes,9,opt,name=achievements,proto3" json:"achievements,omitempty"`         //工作成就
	Skills           []string `protobuf:"bytes,10,rep,name=skills,proto3" json:"skills,omitempty"`                    //使用技能
	CreatedAt        int64    `protobuf:"varint,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`             //创建时间
	UpdatedAt        int64    `protobuf:"varint,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`             //编辑时间
}

func (x *GetExperienceReply) Reset() {
	*x = GetExperienceReply{}
	mi := &file_api_user_v1_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExperienceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperienceReply) ProtoMessage() {}

func (x *GetExperienceReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperienceReply.ProtoReflect.Descriptor instead.
func (*GetExperienceReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *GetExperienceReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetExperienceReply) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *GetExperienceReply) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetExperienceReply) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetExperienceReply) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetExperienceReply) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetExperienceReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetExperienceReply) GetResponsibilities() string {
	if x != nil {
		return x.Responsibilities
	}
	return ""
}

func (x *GetExperienceReply) GetAchievements() string {
	if x != nil {
		return x.Achievements
	}
	return ""
}

func (x *GetExperienceReply) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *GetExperienceReply) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetExperienceReply) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ListExperienceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    *global.PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`       //分页
	Company string           `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"` //公司名称
}

func (x *ListExperienceRequest) Reset() {
	*x = ListExperienceRequest{}
	mi := &file_api_user_v1_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExperienceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExperienceRequest) ProtoMessage() {}

func (x *ListExperienceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExperienceRequest.ProtoReflect.Descriptor instead.
func (*ListExperienceRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *ListExperienceRequest) GetPage() *global.PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListExperienceRequest) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

type ListExperienceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ListExperience `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListExperienceReply) Reset() {
	*x = ListExperienceReply{}
	mi := &file_api_user_v1_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExperienceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExperienceReply) ProtoMessage() {}

func (x *ListExperienceReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExperienceReply.ProtoReflect.Descriptor instead.
func (*ListExperienceReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{3}
}

func (x *ListExperienceReply) GetList() []*ListExperience {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListExperienceReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListExperience struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //ID
	Company     string `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`         //公司名称
	Role        string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`               //职位名称
	Location    string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`       //公司地址
	Start       int64  `protobuf:"varint,5,opt,name=start,proto3" json:"start,omitempty"`            //开始时间
	End         int64  `protobuf:"varint,6,opt,name=end,proto3" json:"end,omitempty"`                //结束时间
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"` // 职位描述
	UpdatedAt   int64  `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`    //编辑时间
}

func (x *ListExperience) Reset() {
	*x = ListExperience{}
	mi := &file_api_user_v1_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExperience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExperience) ProtoMessage() {}

func (x *ListExperience) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExperience.ProtoReflect.Descriptor instead.
func (*ListExperience) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *ListExperience) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListExperience) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ListExperience) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ListExperience) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ListExperience) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListExperience) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *ListExperience) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListExperience) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type SaveProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     //ID
	ExperienceId int64    `protobuf:"varint,2,opt,name=experienceId,proto3" json:"experienceId,omitempty"` //对应的经历的ID
	Title        string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                //项目名称
	Description  string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`    //项目描述
	Skills       []string `protobuf:"bytes,5,rep,name=skills,proto3" json:"skills,omitempty"`              //使用技能
	Start        int64    `protobuf:"varint,6,opt,name=start,proto3" json:"start,omitempty"`               //开始时间
	End          int64    `protobuf:"varint,7,opt,name=end,proto3" json:"end,omitempty"`                   //结束时间
	Link         string   `protobuf:"bytes,8,opt,name=link,proto3" json:"link,omitempty"`                  //项目地址
	Photos       []string `protobuf:"bytes,9,rep,name=photos,proto3" json:"photos,omitempty"`              //项目地址
}

func (x *SaveProjectRequest) Reset() {
	*x = SaveProjectRequest{}
	mi := &file_api_user_v1_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProjectRequest) ProtoMessage() {}

func (x *SaveProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProjectRequest.ProtoReflect.Descriptor instead.
func (*SaveProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{5}
}

func (x *SaveProjectRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveProjectRequest) GetExperienceId() int64 {
	if x != nil {
		return x.ExperienceId
	}
	return 0
}

func (x *SaveProjectRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SaveProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SaveProjectRequest) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *SaveProjectRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SaveProjectRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *SaveProjectRequest) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SaveProjectRequest) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

type GetProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     //ID
	ExperienceId int64    `protobuf:"varint,2,opt,name=experienceId,proto3" json:"experienceId,omitempty"` //对应的经历的ID
	Title        string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                //项目名称
	Description  string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`    //项目描述
	Skills       []string `protobuf:"bytes,5,rep,name=skills,proto3" json:"skills,omitempty"`              //使用技能
	Start        int64    `protobuf:"varint,6,opt,name=start,proto3" json:"start,omitempty"`               //开始时间
	End          int64    `protobuf:"varint,7,opt,name=end,proto3" json:"end,omitempty"`                   //结束时间
	Link         string   `protobuf:"bytes,8,opt,name=link,proto3" json:"link,omitempty"`                  //项目地址
	Photos       []string `protobuf:"bytes,9,rep,name=photos,proto3" json:"photos,omitempty"`              //项目图片
	CreatedAt    int64    `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`      //创建时间
	UpdatedAt    int64    `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`      //编辑时间
}

func (x *GetProjectReply) Reset() {
	*x = GetProjectReply{}
	mi := &file_api_user_v1_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectReply) ProtoMessage() {}

func (x *GetProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectReply.ProtoReflect.Descriptor instead.
func (*GetProjectReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetProjectReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetProjectReply) GetExperienceId() int64 {
	if x != nil {
		return x.ExperienceId
	}
	return 0
}

func (x *GetProjectReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetProjectReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetProjectReply) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *GetProjectReply) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetProjectReply) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetProjectReply) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *GetProjectReply) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *GetProjectReply) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetProjectReply) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ListProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *global.PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                  //分页
	ExperienceId int64            `protobuf:"varint,2,opt,name=experienceId,proto3" json:"experienceId,omitempty"` //对应的经历的ID
	Title        string           `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                //项目名称
	Skills       []string         `protobuf:"bytes,4,rep,name=skills,proto3" json:"skills,omitempty"`              //使用技能
	Time         []int64          `protobuf:"varint,5,rep,packed,name=time,proto3" json:"time,omitempty"`          //项目时间 --查询全部在这个时间范围内的项目
}

func (x *ListProjectRequest) Reset() {
	*x = ListProjectRequest{}
	mi := &file_api_user_v1_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectRequest) ProtoMessage() {}

func (x *ListProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectRequest.ProtoReflect.Descriptor instead.
func (*ListProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{7}
}

func (x *ListProjectRequest) GetPage() *global.PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListProjectRequest) GetExperienceId() int64 {
	if x != nil {
		return x.ExperienceId
	}
	return 0
}

func (x *ListProjectRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListProjectRequest) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *ListProjectRequest) GetTime() []int64 {
	if x != nil {
		return x.Time
	}
	return nil
}

type ListProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     //ID
	ExperienceId int64    `protobuf:"varint,2,opt,name=experienceId,proto3" json:"experienceId,omitempty"` //对应的经历的ID
	Title        string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                //项目名称
	Skills       []string `protobuf:"bytes,4,rep,name=skills,proto3" json:"skills,omitempty"`              //使用技能
	Start        int64    `protobuf:"varint,5,opt,name=start,proto3" json:"start,omitempty"`               //开始时间
	End          int64    `protobuf:"varint,6,opt,name=end,proto3" json:"end,omitempty"`                   //结束时间
	Link         string   `protobuf:"bytes,7,opt,name=link,proto3" json:"link,omitempty"`                  //项目地址
	Photo        string   `protobuf:"bytes,8,opt,name=photo,proto3" json:"photo,omitempty"`                //项目图片
	UpdatedAt    int64    `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`       //编辑时间
}

func (x *ListProject) Reset() {
	*x = ListProject{}
	mi := &file_api_user_v1_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProject) ProtoMessage() {}

func (x *ListProject) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProject.ProtoReflect.Descriptor instead.
func (*ListProject) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{8}
}

func (x *ListProject) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListProject) GetExperienceId() int64 {
	if x != nil {
		return x.ExperienceId
	}
	return 0
}

func (x *ListProject) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListProject) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *ListProject) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListProject) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *ListProject) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ListProject) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *ListProject) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ListProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ListProject `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListProjectReply) Reset() {
	*x = ListProjectReply{}
	mi := &file_api_user_v1_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectReply) ProtoMessage() {}

func (x *ListProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectReply.ProtoReflect.Descriptor instead.
func (*ListProjectReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{9}
}

func (x *ListProjectReply) GetList() []*ListProject {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListProjectReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SaveUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                 //姓名
	Email        string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`               //工作邮箱
	Avatar       string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`             //头像
	Professional string   `protobuf:"bytes,5,opt,name=professional,proto3" json:"professional,omitempty"` //职称
	Skills       []string `protobuf:"bytes,6,rep,name=skills,proto3" json:"skills,omitempty"`             //技能
	Description  string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`   //个人简介
}

func (x *SaveUserRequest) Reset() {
	*x = SaveUserRequest{}
	mi := &file_api_user_v1_user_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUserRequest) ProtoMessage() {}

func (x *SaveUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUserRequest.ProtoReflect.Descriptor instead.
func (*SaveUserRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{10}
}

func (x *SaveUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SaveUserRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SaveUserRequest) GetProfessional() string {
	if x != nil {
		return x.Professional
	}
	return ""
}

func (x *SaveUserRequest) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *SaveUserRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                    //ID
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                 //姓名
	Email        string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`               //工作邮箱
	Avatar       string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`             //头像
	Professional string   `protobuf:"bytes,5,opt,name=professional,proto3" json:"professional,omitempty"` //职称
	Skills       []string `protobuf:"bytes,6,rep,name=skills,proto3" json:"skills,omitempty"`             //技能
	Description  string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`   //个人简介
	CreatedAt    int64    `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`      //创建时间
	UpdatedAt    int64    `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`      //编辑时间
}

func (x *GetUserReply) Reset() {
	*x = GetUserReply{}
	mi := &file_api_user_v1_user_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReply) ProtoMessage() {}

func (x *GetUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_user_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReply.ProtoReflect.Descriptor instead.
func (*GetUserReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_user_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserReply) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetUserReply) GetProfessional() string {
	if x != nil {
		return x.Professional
	}
	return ""
}

func (x *GetUserReply) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *GetUserReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetUserReply) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetUserReply) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_api_user_v1_user_proto protoreflect.FileDescriptor

var file_api_user_v1_user_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3,
	0x02, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x22, 0xdc, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x5b, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x22, 0x5c, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd2,
	0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x73, 0x22, 0xa5, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0xdf, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x56, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb1, 0x01, 0x0a, 0x0f,
	0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xfa, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0x86, 0x06, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a, 0x01, 0x2a, 0x12, 0x42, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a, 0x01,
	0x2a, 0x12, 0x4c, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a, 0x01, 0x2a, 0x12,
	0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44,
	0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a, 0x01, 0x2a, 0x12, 0x45,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x03, 0x3a, 0x01, 0x2a, 0x12, 0x58, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a, 0x01, 0x2a, 0x12,
	0x52, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03,
	0x3a, 0x01, 0x2a, 0x12, 0x40, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x03, 0x3a, 0x01, 0x2a, 0x12, 0x4b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a,
	0x01, 0x2a, 0x12, 0x61, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x03, 0x3a, 0x01, 0x2a, 0x42, 0x24, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x13, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_user_v1_user_proto_rawDescOnce sync.Once
	file_api_user_v1_user_proto_rawDescData = file_api_user_v1_user_proto_rawDesc
)

func file_api_user_v1_user_proto_rawDescGZIP() []byte {
	file_api_user_v1_user_proto_rawDescOnce.Do(func() {
		file_api_user_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_user_v1_user_proto_rawDescData)
	})
	return file_api_user_v1_user_proto_rawDescData
}

var file_api_user_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_user_v1_user_proto_goTypes = []any{
	(*SaveExperienceRequest)(nil), // 0: api.user.v1.SaveExperienceRequest
	(*GetExperienceReply)(nil),    // 1: api.user.v1.GetExperienceReply
	(*ListExperienceRequest)(nil), // 2: api.user.v1.ListExperienceRequest
	(*ListExperienceReply)(nil),   // 3: api.user.v1.ListExperienceReply
	(*ListExperience)(nil),        // 4: api.user.v1.ListExperience
	(*SaveProjectRequest)(nil),    // 5: api.user.v1.SaveProjectRequest
	(*GetProjectReply)(nil),       // 6: api.user.v1.GetProjectReply
	(*ListProjectRequest)(nil),    // 7: api.user.v1.ListProjectRequest
	(*ListProject)(nil),           // 8: api.user.v1.ListProject
	(*ListProjectReply)(nil),      // 9: api.user.v1.ListProjectReply
	(*SaveUserRequest)(nil),       // 10: api.user.v1.SaveUserRequest
	(*GetUserReply)(nil),          // 11: api.user.v1.GetUserReply
	(*global.PageInfo)(nil),       // 12: api.global.PageInfo
	(*global.Empty)(nil),          // 13: api.global.Empty
	(*global.ID)(nil),             // 14: api.global.ID
}
var file_api_user_v1_user_proto_depIdxs = []int32{
	12, // 0: api.user.v1.ListExperienceRequest.page:type_name -> api.global.PageInfo
	4,  // 1: api.user.v1.ListExperienceReply.list:type_name -> api.user.v1.ListExperience
	12, // 2: api.user.v1.ListProjectRequest.page:type_name -> api.global.PageInfo
	8,  // 3: api.user.v1.ListProjectReply.list:type_name -> api.user.v1.ListProject
	10, // 4: api.user.v1.User.SaveUser:input_type -> api.user.v1.SaveUserRequest
	13, // 5: api.user.v1.User.GetUser:input_type -> api.global.Empty
	5,  // 6: api.user.v1.User.SaveProject:input_type -> api.user.v1.SaveProjectRequest
	14, // 7: api.user.v1.User.DeleteProject:input_type -> api.global.ID
	14, // 8: api.user.v1.User.GetProject:input_type -> api.global.ID
	7,  // 9: api.user.v1.User.ListProject:input_type -> api.user.v1.ListProjectRequest
	0,  // 10: api.user.v1.User.SaveExperience:input_type -> api.user.v1.SaveExperienceRequest
	14, // 11: api.user.v1.User.DeleteExperience:input_type -> api.global.ID
	14, // 12: api.user.v1.User.GetExperience:input_type -> api.global.ID
	2,  // 13: api.user.v1.User.ListExperience:input_type -> api.user.v1.ListExperienceRequest
	13, // 14: api.user.v1.User.SaveUser:output_type -> api.global.Empty
	11, // 15: api.user.v1.User.GetUser:output_type -> api.user.v1.GetUserReply
	13, // 16: api.user.v1.User.SaveProject:output_type -> api.global.Empty
	13, // 17: api.user.v1.User.DeleteProject:output_type -> api.global.Empty
	6,  // 18: api.user.v1.User.GetProject:output_type -> api.user.v1.GetProjectReply
	9,  // 19: api.user.v1.User.ListProject:output_type -> api.user.v1.ListProjectReply
	13, // 20: api.user.v1.User.SaveExperience:output_type -> api.global.Empty
	13, // 21: api.user.v1.User.DeleteExperience:output_type -> api.global.Empty
	1,  // 22: api.user.v1.User.GetExperience:output_type -> api.user.v1.GetExperienceReply
	3,  // 23: api.user.v1.User.ListExperience:output_type -> api.user.v1.ListExperienceReply
	14, // [14:24] is the sub-list for method output_type
	4,  // [4:14] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_user_v1_user_proto_init() }
func file_api_user_v1_user_proto_init() {
	if File_api_user_v1_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_user_v1_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_user_v1_user_proto_goTypes,
		DependencyIndexes: file_api_user_v1_user_proto_depIdxs,
		MessageInfos:      file_api_user_v1_user_proto_msgTypes,
	}.Build()
	File_api_user_v1_user_proto = out.File
	file_api_user_v1_user_proto_rawDesc = nil
	file_api_user_v1_user_proto_goTypes = nil
	file_api_user_v1_user_proto_depIdxs = nil
}
