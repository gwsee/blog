// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.4
// source: api/travel/v1/travel.proto

package v1

import (
	global "blog/api/global"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SaveTravelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //ID 没有就是新增
	Title       string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`             //标题
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //描述
	Video       string   `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`             //视频地址
	Photo       []string `protobuf:"bytes,5,rep,name=photo,proto3" json:"photo,omitempty"`             //照片
}

func (x *SaveTravelRequest) Reset() {
	*x = SaveTravelRequest{}
	mi := &file_api_travel_v1_travel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveTravelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTravelRequest) ProtoMessage() {}

func (x *SaveTravelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_travel_v1_travel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTravelRequest.ProtoReflect.Descriptor instead.
func (*SaveTravelRequest) Descriptor() ([]byte, []int) {
	return file_api_travel_v1_travel_proto_rawDescGZIP(), []int{0}
}

func (x *SaveTravelRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveTravelRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SaveTravelRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SaveTravelRequest) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *SaveTravelRequest) GetPhoto() []string {
	if x != nil {
		return x.Photo
	}
	return nil
}

type GetTravelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //ID
	Title       string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`             //标题
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //描述
	Video       string   `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`             //视频地址
	Photos      []string `protobuf:"bytes,5,rep,name=photos,proto3" json:"photos,omitempty"`           //照片
	BrowseNum   int64    `protobuf:"varint,6,opt,name=browseNum,proto3" json:"browseNum,omitempty"`    //浏览量
	ThumbNum    int64    `protobuf:"varint,7,opt,name=thumbNum,proto3" json:"thumbNum,omitempty"`      //点赞量
	CollectNum  int64    `protobuf:"varint,8,opt,name=collectNum,proto3" json:"collectNum,omitempty"`  //收藏量
	CreatedAt   int64    `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //创建时间
	UpdatedAt   int64    `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`   //编辑时间
}

func (x *GetTravelReply) Reset() {
	*x = GetTravelReply{}
	mi := &file_api_travel_v1_travel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTravelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTravelReply) ProtoMessage() {}

func (x *GetTravelReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_travel_v1_travel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTravelReply.ProtoReflect.Descriptor instead.
func (*GetTravelReply) Descriptor() ([]byte, []int) {
	return file_api_travel_v1_travel_proto_rawDescGZIP(), []int{1}
}

func (x *GetTravelReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTravelReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetTravelReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetTravelReply) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *GetTravelReply) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *GetTravelReply) GetBrowseNum() int64 {
	if x != nil {
		return x.BrowseNum
	}
	return 0
}

func (x *GetTravelReply) GetThumbNum() int64 {
	if x != nil {
		return x.ThumbNum
	}
	return 0
}

func (x *GetTravelReply) GetCollectNum() int64 {
	if x != nil {
		return x.CollectNum
	}
	return 0
}

func (x *GetTravelReply) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetTravelReply) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ListTravelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *global.PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`               //分页
	Title       string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`             //标题
	Description string           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //描述
	My          bool             `protobuf:"varint,4,opt,name=my,proto3" json:"my,omitempty"`                  //是否只查看自己的
}

func (x *ListTravelRequest) Reset() {
	*x = ListTravelRequest{}
	mi := &file_api_travel_v1_travel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTravelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTravelRequest) ProtoMessage() {}

func (x *ListTravelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_travel_v1_travel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTravelRequest.ProtoReflect.Descriptor instead.
func (*ListTravelRequest) Descriptor() ([]byte, []int) {
	return file_api_travel_v1_travel_proto_rawDescGZIP(), []int{2}
}

func (x *ListTravelRequest) GetPage() *global.PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListTravelRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListTravelRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListTravelRequest) GetMy() bool {
	if x != nil {
		return x.My
	}
	return false
}

type ListTravelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ListTravel `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListTravelReply) Reset() {
	*x = ListTravelReply{}
	mi := &file_api_travel_v1_travel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTravelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTravelReply) ProtoMessage() {}

func (x *ListTravelReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_travel_v1_travel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTravelReply.ProtoReflect.Descriptor instead.
func (*ListTravelReply) Descriptor() ([]byte, []int) {
	return file_api_travel_v1_travel_proto_rawDescGZIP(), []int{3}
}

func (x *ListTravelReply) GetList() []*ListTravel {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListTravelReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListTravel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //ID
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`             //标题
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //描述
	Video       string `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`             //视频地址
	Photo       string `protobuf:"bytes,5,opt,name=photo,proto3" json:"photo,omitempty"`             //照片--第一个作为数据显示
	BrowseNum   int64  `protobuf:"varint,6,opt,name=browseNum,proto3" json:"browseNum,omitempty"`    //浏览量
	ThumbNum    int64  `protobuf:"varint,7,opt,name=thumbNum,proto3" json:"thumbNum,omitempty"`      //点赞量
	CollectNum  int64  `protobuf:"varint,8,opt,name=collectNum,proto3" json:"collectNum,omitempty"`  //收藏量
	CreatedAt   int64  `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //创建时间
}

func (x *ListTravel) Reset() {
	*x = ListTravel{}
	mi := &file_api_travel_v1_travel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTravel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTravel) ProtoMessage() {}

func (x *ListTravel) ProtoReflect() protoreflect.Message {
	mi := &file_api_travel_v1_travel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTravel.ProtoReflect.Descriptor instead.
func (*ListTravel) Descriptor() ([]byte, []int) {
	return file_api_travel_v1_travel_proto_rawDescGZIP(), []int{4}
}

func (x *ListTravel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListTravel) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListTravel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListTravel) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *ListTravel) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *ListTravel) GetBrowseNum() int64 {
	if x != nil {
		return x.BrowseNum
	}
	return 0
}

func (x *ListTravel) GetThumbNum() int64 {
	if x != nil {
		return x.ThumbNum
	}
	return 0
}

func (x *ListTravel) GetCollectNum() int64 {
	if x != nil {
		return x.CollectNum
	}
	return 0
}

func (x *ListTravel) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

var File_api_travel_v1_travel_proto protoreflect.FileDescriptor

var file_api_travel_v1_travel_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2f,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x9c,
	0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4e, 0x75,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4e, 0x75,
	0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x85, 0x01,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6d, 0x79, 0x22, 0x56, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xf8, 0x01,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xbe, 0x03, 0x0a, 0x06, 0x54, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x12, 0x4c, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a, 0x01,
	0x2a, 0x12, 0x3c, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49,
	0x44, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a, 0x01, 0x2a, 0x12,
	0x45, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x12, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x03, 0x3a, 0x01, 0x2a, 0x12, 0x59, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61,
	0x76, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a, 0x01,
	0x2a, 0x12, 0x41, 0x0a, 0x05, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x03, 0x3a, 0x01, 0x2a, 0x12, 0x43, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x1a,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x3a, 0x01, 0x2a, 0x42, 0x28, 0x0a, 0x0d, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x15, 0x62, 0x6c,
	0x6f, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_travel_v1_travel_proto_rawDescOnce sync.Once
	file_api_travel_v1_travel_proto_rawDescData = file_api_travel_v1_travel_proto_rawDesc
)

func file_api_travel_v1_travel_proto_rawDescGZIP() []byte {
	file_api_travel_v1_travel_proto_rawDescOnce.Do(func() {
		file_api_travel_v1_travel_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_travel_v1_travel_proto_rawDescData)
	})
	return file_api_travel_v1_travel_proto_rawDescData
}

var file_api_travel_v1_travel_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_travel_v1_travel_proto_goTypes = []any{
	(*SaveTravelRequest)(nil), // 0: api.travel.v1.SaveTravelRequest
	(*GetTravelReply)(nil),    // 1: api.travel.v1.GetTravelReply
	(*ListTravelRequest)(nil), // 2: api.travel.v1.ListTravelRequest
	(*ListTravelReply)(nil),   // 3: api.travel.v1.ListTravelReply
	(*ListTravel)(nil),        // 4: api.travel.v1.ListTravel
	(*global.PageInfo)(nil),   // 5: api.global.PageInfo
	(*global.ID)(nil),         // 6: api.global.ID
	(*global.Empty)(nil),      // 7: api.global.Empty
}
var file_api_travel_v1_travel_proto_depIdxs = []int32{
	5, // 0: api.travel.v1.ListTravelRequest.page:type_name -> api.global.PageInfo
	4, // 1: api.travel.v1.ListTravelReply.list:type_name -> api.travel.v1.ListTravel
	0, // 2: api.travel.v1.Travel.SaveTravel:input_type -> api.travel.v1.SaveTravelRequest
	6, // 3: api.travel.v1.Travel.DeleteTravel:input_type -> api.global.ID
	6, // 4: api.travel.v1.Travel.GetTravel:input_type -> api.global.ID
	2, // 5: api.travel.v1.Travel.ListTravel:input_type -> api.travel.v1.ListTravelRequest
	6, // 6: api.travel.v1.Travel.Thumb:input_type -> api.global.ID
	6, // 7: api.travel.v1.Travel.Collect:input_type -> api.global.ID
	7, // 8: api.travel.v1.Travel.SaveTravel:output_type -> api.global.Empty
	7, // 9: api.travel.v1.Travel.DeleteTravel:output_type -> api.global.Empty
	1, // 10: api.travel.v1.Travel.GetTravel:output_type -> api.travel.v1.GetTravelReply
	3, // 11: api.travel.v1.Travel.ListTravel:output_type -> api.travel.v1.ListTravelReply
	1, // 12: api.travel.v1.Travel.Thumb:output_type -> api.travel.v1.GetTravelReply
	1, // 13: api.travel.v1.Travel.Collect:output_type -> api.travel.v1.GetTravelReply
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_travel_v1_travel_proto_init() }
func file_api_travel_v1_travel_proto_init() {
	if File_api_travel_v1_travel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_travel_v1_travel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_travel_v1_travel_proto_goTypes,
		DependencyIndexes: file_api_travel_v1_travel_proto_depIdxs,
		MessageInfos:      file_api_travel_v1_travel_proto_msgTypes,
	}.Build()
	File_api_travel_v1_travel_proto = out.File
	file_api_travel_v1_travel_proto_rawDesc = nil
	file_api_travel_v1_travel_proto_goTypes = nil
	file_api_travel_v1_travel_proto_depIdxs = nil
}
