syntax = "proto3";

package api.tools.v1;

option go_package = "blog/api/tools/v1;v1";
option java_multiple_files = true;
option java_package = "api.tools.v1";
import "api/global/index.proto";

import "third_party/google/api/annotations.proto";

service Tools {
	rpc UploadFileByStream (StreamRequest) returns (UploadFileReply){
		option (google.api.http) = {
			body: "*"
		};
	};
	//上传文件流的方式
	rpc UploadFile (UploadFileRequest) returns (UploadFileReply){
		option (google.api.http) = {
			body: "*"
		};
	};
	rpc Files(global.IDStr)returns(global.IDStr){
		option (google.api.http) = {
			get: "/v1/file/{id}"
		};
	}
	//获取上传文件到oss的token，并且判断文件是否已经上传
	rpc UploadOssToken(global.IDStr)returns(UploadOssTokenReply){
		option (google.api.http) = {
			body: "*"
		};
	}
	rpc UploadOssSave(UploadOssSaveReq)returns(global.Empty){
		option (google.api.http) = {
			body: "*"
		};
	}
}
message UploadOssSaveReq {
	string id = 1;
	string type = 2;
	int64 size = 3;
	string name = 4;
	string path = 5;
}
message UploadOssTokenReply{
	bool exist = 1; //为true代表已经存在
	//基本信息
	string host = 2;
	int64 expire = 3;
	string region = 5;
	string bucket = 6;
	//下面是请求接口返回的
	string expire_str = 4;
	string key_id = 7;
	string key_secret =8;
	string token = 9;
}

message UploadFileReply{
	string uuid  = 1;
	string message = 2;   // 返回消息
	bool  success = 3;     // 是否成功
}

message StreamRequest {
	string filename = 1;  // 文件名（在第一个请求中可传递）
	bytes chunk = 2;      // 文件数据的分块
}

message UploadFileRequest {
	string filename = 1; // 文件名
	bytes content = 2;   // 文件的完整内容
}