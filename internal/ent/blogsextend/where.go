// Code generated by ent, DO NOT EDIT.

package blogsextend

import (
	"blog/internal/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLTE(FieldID, id))
}

// BlogID applies equality check predicate on the "blog_id" field. It's identical to BlogIDEQ.
func BlogID(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldBlogID, v))
}

// AccountID applies equality check predicate on the "account_id" field. It's identical to AccountIDEQ.
func AccountID(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldAccountID, v))
}

// BrowseNum applies equality check predicate on the "browse_num" field. It's identical to BrowseNumEQ.
func BrowseNum(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldBrowseNum, v))
}

// BrowseAt applies equality check predicate on the "browse_at" field. It's identical to BrowseAtEQ.
func BrowseAt(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldBrowseAt, v))
}

// Collect applies equality check predicate on the "collect" field. It's identical to CollectEQ.
func Collect(v bool) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldCollect, v))
}

// CollectAt applies equality check predicate on the "collect_at" field. It's identical to CollectAtEQ.
func CollectAt(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldCollectAt, v))
}

// Love applies equality check predicate on the "love" field. It's identical to LoveEQ.
func Love(v bool) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldLove, v))
}

// LoveAt applies equality check predicate on the "love_at" field. It's identical to LoveAtEQ.
func LoveAt(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldLoveAt, v))
}

// BlogIDEQ applies the EQ predicate on the "blog_id" field.
func BlogIDEQ(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldBlogID, v))
}

// BlogIDNEQ applies the NEQ predicate on the "blog_id" field.
func BlogIDNEQ(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNEQ(FieldBlogID, v))
}

// BlogIDIn applies the In predicate on the "blog_id" field.
func BlogIDIn(vs ...int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldIn(FieldBlogID, vs...))
}

// BlogIDNotIn applies the NotIn predicate on the "blog_id" field.
func BlogIDNotIn(vs ...int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNotIn(FieldBlogID, vs...))
}

// BlogIDGT applies the GT predicate on the "blog_id" field.
func BlogIDGT(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGT(FieldBlogID, v))
}

// BlogIDGTE applies the GTE predicate on the "blog_id" field.
func BlogIDGTE(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGTE(FieldBlogID, v))
}

// BlogIDLT applies the LT predicate on the "blog_id" field.
func BlogIDLT(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLT(FieldBlogID, v))
}

// BlogIDLTE applies the LTE predicate on the "blog_id" field.
func BlogIDLTE(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLTE(FieldBlogID, v))
}

// AccountIDEQ applies the EQ predicate on the "account_id" field.
func AccountIDEQ(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldAccountID, v))
}

// AccountIDNEQ applies the NEQ predicate on the "account_id" field.
func AccountIDNEQ(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNEQ(FieldAccountID, v))
}

// AccountIDIn applies the In predicate on the "account_id" field.
func AccountIDIn(vs ...int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldIn(FieldAccountID, vs...))
}

// AccountIDNotIn applies the NotIn predicate on the "account_id" field.
func AccountIDNotIn(vs ...int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNotIn(FieldAccountID, vs...))
}

// AccountIDGT applies the GT predicate on the "account_id" field.
func AccountIDGT(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGT(FieldAccountID, v))
}

// AccountIDGTE applies the GTE predicate on the "account_id" field.
func AccountIDGTE(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGTE(FieldAccountID, v))
}

// AccountIDLT applies the LT predicate on the "account_id" field.
func AccountIDLT(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLT(FieldAccountID, v))
}

// AccountIDLTE applies the LTE predicate on the "account_id" field.
func AccountIDLTE(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLTE(FieldAccountID, v))
}

// BrowseNumEQ applies the EQ predicate on the "browse_num" field.
func BrowseNumEQ(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldBrowseNum, v))
}

// BrowseNumNEQ applies the NEQ predicate on the "browse_num" field.
func BrowseNumNEQ(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNEQ(FieldBrowseNum, v))
}

// BrowseNumIn applies the In predicate on the "browse_num" field.
func BrowseNumIn(vs ...int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldIn(FieldBrowseNum, vs...))
}

// BrowseNumNotIn applies the NotIn predicate on the "browse_num" field.
func BrowseNumNotIn(vs ...int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNotIn(FieldBrowseNum, vs...))
}

// BrowseNumGT applies the GT predicate on the "browse_num" field.
func BrowseNumGT(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGT(FieldBrowseNum, v))
}

// BrowseNumGTE applies the GTE predicate on the "browse_num" field.
func BrowseNumGTE(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGTE(FieldBrowseNum, v))
}

// BrowseNumLT applies the LT predicate on the "browse_num" field.
func BrowseNumLT(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLT(FieldBrowseNum, v))
}

// BrowseNumLTE applies the LTE predicate on the "browse_num" field.
func BrowseNumLTE(v int) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLTE(FieldBrowseNum, v))
}

// BrowseAtEQ applies the EQ predicate on the "browse_at" field.
func BrowseAtEQ(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldBrowseAt, v))
}

// BrowseAtNEQ applies the NEQ predicate on the "browse_at" field.
func BrowseAtNEQ(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNEQ(FieldBrowseAt, v))
}

// BrowseAtIn applies the In predicate on the "browse_at" field.
func BrowseAtIn(vs ...int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldIn(FieldBrowseAt, vs...))
}

// BrowseAtNotIn applies the NotIn predicate on the "browse_at" field.
func BrowseAtNotIn(vs ...int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNotIn(FieldBrowseAt, vs...))
}

// BrowseAtGT applies the GT predicate on the "browse_at" field.
func BrowseAtGT(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGT(FieldBrowseAt, v))
}

// BrowseAtGTE applies the GTE predicate on the "browse_at" field.
func BrowseAtGTE(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGTE(FieldBrowseAt, v))
}

// BrowseAtLT applies the LT predicate on the "browse_at" field.
func BrowseAtLT(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLT(FieldBrowseAt, v))
}

// BrowseAtLTE applies the LTE predicate on the "browse_at" field.
func BrowseAtLTE(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLTE(FieldBrowseAt, v))
}

// CollectEQ applies the EQ predicate on the "collect" field.
func CollectEQ(v bool) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldCollect, v))
}

// CollectNEQ applies the NEQ predicate on the "collect" field.
func CollectNEQ(v bool) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNEQ(FieldCollect, v))
}

// CollectAtEQ applies the EQ predicate on the "collect_at" field.
func CollectAtEQ(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldCollectAt, v))
}

// CollectAtNEQ applies the NEQ predicate on the "collect_at" field.
func CollectAtNEQ(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNEQ(FieldCollectAt, v))
}

// CollectAtIn applies the In predicate on the "collect_at" field.
func CollectAtIn(vs ...int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldIn(FieldCollectAt, vs...))
}

// CollectAtNotIn applies the NotIn predicate on the "collect_at" field.
func CollectAtNotIn(vs ...int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNotIn(FieldCollectAt, vs...))
}

// CollectAtGT applies the GT predicate on the "collect_at" field.
func CollectAtGT(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGT(FieldCollectAt, v))
}

// CollectAtGTE applies the GTE predicate on the "collect_at" field.
func CollectAtGTE(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGTE(FieldCollectAt, v))
}

// CollectAtLT applies the LT predicate on the "collect_at" field.
func CollectAtLT(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLT(FieldCollectAt, v))
}

// CollectAtLTE applies the LTE predicate on the "collect_at" field.
func CollectAtLTE(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLTE(FieldCollectAt, v))
}

// LoveEQ applies the EQ predicate on the "love" field.
func LoveEQ(v bool) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldLove, v))
}

// LoveNEQ applies the NEQ predicate on the "love" field.
func LoveNEQ(v bool) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNEQ(FieldLove, v))
}

// LoveAtEQ applies the EQ predicate on the "love_at" field.
func LoveAtEQ(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldEQ(FieldLoveAt, v))
}

// LoveAtNEQ applies the NEQ predicate on the "love_at" field.
func LoveAtNEQ(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNEQ(FieldLoveAt, v))
}

// LoveAtIn applies the In predicate on the "love_at" field.
func LoveAtIn(vs ...int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldIn(FieldLoveAt, vs...))
}

// LoveAtNotIn applies the NotIn predicate on the "love_at" field.
func LoveAtNotIn(vs ...int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldNotIn(FieldLoveAt, vs...))
}

// LoveAtGT applies the GT predicate on the "love_at" field.
func LoveAtGT(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGT(FieldLoveAt, v))
}

// LoveAtGTE applies the GTE predicate on the "love_at" field.
func LoveAtGTE(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldGTE(FieldLoveAt, v))
}

// LoveAtLT applies the LT predicate on the "love_at" field.
func LoveAtLT(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLT(FieldLoveAt, v))
}

// LoveAtLTE applies the LTE predicate on the "love_at" field.
func LoveAtLTE(v int64) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.FieldLTE(FieldLoveAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.BlogsExtend) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.BlogsExtend) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.BlogsExtend) predicate.BlogsExtend {
	return predicate.BlogsExtend(sql.NotPredicates(p))
}
