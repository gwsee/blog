# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/blogs/create:
        post:
            tags:
                - Blogs
            operationId: Blogs_CreateBlogs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBlogsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/blogs/del:
        post:
            tags:
                - Blogs
            operationId: Blogs_DeleteBlogs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ID'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/blogs/get:
        post:
            tags:
                - Blogs
            operationId: Blogs_GetBlogs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ID'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBlogsReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/blogs/list:
        post:
            tags:
                - Blogs
            operationId: Blogs_ListBlogs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListBlogsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListBlogsReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/blogs/update:
        post:
            tags:
                - Blogs
            operationId: Blogs_UpdateBlogs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBlogsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/blogs_comment/create:
        post:
            tags:
                - BlogsComment
            operationId: BlogsComment_CreateBlogsComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBlogsCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/blogs_comment/del:
        post:
            tags:
                - BlogsComment
            operationId: BlogsComment_DeleteBlogsComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ID'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/blogs_comment/get:
        post:
            tags:
                - BlogsComment
            operationId: BlogsComment_GetBlogsComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ID'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBlogsCommentReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/blogs_comment/list:
        post:
            tags:
                - BlogsComment
            operationId: BlogsComment_ListBlogsComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListBlogsCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListBlogsCommentReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/blogs_comment/update:
        post:
            tags:
                - BlogsComment
            operationId: BlogsComment_UpdateBlogsComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBlogsCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Empty'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        BlogsHeader:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                description:
                    type: string
                isHidden:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                cover:
                    type: string
                accountId:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
        CreateBlogsCommentRequest:
            type: object
            properties:
                blogId:
                    type: string
                topId:
                    type: string
                parentId:
                    type: string
                level:
                    type: string
                total:
                    type: string
                status:
                    type: string
                content:
                    type: string
        CreateBlogsRequest:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                isHidden:
                    type: string
                Tags:
                    type: array
                    items:
                        type: string
                cover:
                    type: string
                content:
                    type: string
        Empty:
            type: object
            properties: {}
        GetBlogsCommentReply:
            type: object
            properties:
                id:
                    type: string
                blogId:
                    type: string
                topId:
                    type: string
                parentId:
                    type: string
                level:
                    type: string
                total:
                    type: string
                status:
                    type: string
                content:
                    type: string
                accountId:
                    type: string
                createdAt:
                    type: string
        GetBlogsReply:
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/BlogsHeader'
                content:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ID:
            type: object
            properties:
                id:
                    type: string
        ListBlogsCommentReply:
            type: object
            properties:
                end:
                    type: string
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetBlogsCommentReply'
        ListBlogsCommentRequest:
            type: object
            properties:
                page:
                    $ref: '#/components/schemas/PageIndex'
                blogId:
                    type: string
                parentId:
                    type: string
                content:
                    type: string
                accountId:
                    type: string
        ListBlogsReply:
            type: object
            properties:
                total:
                    type: string
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlogsHeader'
        ListBlogsRequest:
            type: object
            properties:
                page:
                    $ref: '#/components/schemas/PageInfo'
                title:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
        PageIndex:
            type: object
            properties:
                start:
                    type: string
                pageSize:
                    type: string
        PageInfo:
            type: object
            properties:
                pageNum:
                    type: string
                pageSize:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateBlogsCommentRequest:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: string
                content:
                    type: string
        UpdateBlogsRequest:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                description:
                    type: string
                isHidden:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                cover:
                    type: string
                content:
                    type: string
tags:
    - name: Blogs
    - name: BlogsComment
